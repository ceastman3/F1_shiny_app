)
server = function(input, output) {
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Analysis Topic", c("Races", "Driver")),
conditionalPanel(
condition = "input.stats == 'Races'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
),
conditionalPanel(
condition = "input.stats == 'Driver'",
selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
),
),
mainPanel(
leafletOutput("map"),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Analysis Topic", c("Races", "Driver")),
conditionalPanel(
condition = "input.stats == 'Races'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
),
conditionalPanel(
condition = "input.stats == 'Driver'",
selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Races'",
leafletOutput("map")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
}
shinyApp(ui, server)
race_results = races |>
select(date, race_name, circuit_name, location, county)
race_results = races |>
select(date, race_name, circuit_name, location, country)
View(race_results)
View(results)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
),
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Races'",
leafletOutput("map"),
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
),
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Races'",
leafletOutput("map"),
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
# Lookup the raceId based on the selected race_name from the input
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId())
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Races'",
leafletOutput("map"),
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
# Lookup the raceId based on the selected race_name from the input
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId())
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Races'",
leafletOutput("map"),
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
raceId <- races[races$race_name == input$race_search, "raceId"]
if(length(raceId) > 0) {
return(raceId)
} else {
return(NA)  # Handle case where no matching raceId is found
}
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId())
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Season'",
leafletOutput("map"),
),
conditionalPanel(
condition = "Race",
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
if (!is.null(input$race_search) && input$stats == "Race") {
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
}
else { return(NULL) }
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId())
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Season'",
leafletOutput("map"),
),
conditionalPanel(
condition = "Race",
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
if (!is.null(input$race_search) && input$stats == "Race") {
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
}
else { return(NULL) }
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId())
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Season'",
leafletOutput("map"),
),
conditionalPanel(
condition = "Race",
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
if (!is.null(input$race_search) && input$stats == "Race") {
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
}
else { return(NULL) }
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId()) |>
select(position, driver_num, forename, surname, points, nationality, time, statusId)
})
}
shinyApp(ui, server)
ui = fluidPage(
titlePanel(
# img(src="f1_logo.png", align="left"),
h1("Formula 1 2023 Season Driver Statistics", style={'color:white; background-color:#FF1E00'})
),
sidebarLayout(
sidebarPanel(
selectInput("stats", "Select Topic", c("Season", "Race")),
conditionalPanel(
condition = "input.stats == 'Race'",
selectizeInput("race_search", "Select a Race", races$race_name, multiple = FALSE)
)
# conditionalPanel(
#   condition = "input.stats == 'Driver'",
#   selectizeInput("driver_search", "Select a Driver", drivers$surname, multiple = FALSE)
# ),
),
mainPanel(
conditionalPanel(
condition = "input.stats == 'Season'",
leafletOutput("map")
),
conditionalPanel(
condition = "Race",
dataTableOutput("position_table")
),
# plotOutput("team_stats"),
setBackgroundColor("#FF1E00")
)
)
)
server = function(input, output) {
selected_raceId <- reactive({
if (!is.null(input$race_search) && input$stats == "Race") {
raceId <- races[races$race_name == input$race_search, "raceId"]
return(raceId)
}
else { return(NULL) }
})
output$map <- renderLeaflet({
leaflet(data=races) |>
addTiles() |>
setView(lng = -30, lat = 30, zoom = 2) |>
addMarkers(popup=~paste("<b>Race:</b>", race_name,
"<br><b>Circuit:</b>", circuit_name,
"<br><b>City:</b>", location,
"<br><b>Country:</b>", country,
"<br><b>Date:</b>", date))
})
output$position_table = renderDataTable({
results %>%
filter(raceId == selected_raceId()) |>
select(position, points, forename, surname, driver_num, nationality, time, statusId)
})
}
shinyApp(ui, server)
